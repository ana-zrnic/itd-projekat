{"version":3,"sources":["./src/app/log.service.ts","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/environments/environment.ts","./src/app/log/log-image/log-image.component.ts","./src/app/log/log-image/log-image.component.html","./src/app/menu-bar/menu-bar.component.ts","./src/app/menu-bar/menu-bar.component.html","./src/app/logs/logs.component.html","./src/app/logs/logs.component.ts","./src/app/log/log-text/log-text.component.ts","./src/app/log/log-text/log-text.component.html","./src/app/home-banner/home-banner.component.ts","./src/app/home-banner/home-banner.component.html","./src/app/edit-entry/edit-entry.component.ts","./src/app/edit-entry/edit-entry.component.html","./src/app/new-entry.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/log/log.component.ts","./src/app/log/log.component.html","./src/app/app.module.ts","./src/app/home-banner/right/right.component.ts","./src/app/home-banner/right/right.component.html","./src/app/home-banner/left/left.component.ts","./src/app/home-banner/left/left.component.html","./src/app/app-routing.module.ts","./src/app/new-entry/new-entry.component.ts","./src/app/new-entry/new-entry.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Log } from './log';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogService {\n  url: string;\n  error = false;\n  errorMessage = '';\n\n  constructor(private httpClient: HttpClient) { \n    this.url = \"http://127.0.0.1:5000/static/logs\";\n  }\n\n  /**\n     * get all logs\n     * @returns obs of all logs\n     */\n  getLogs(): Observable<Log[]> {\n    console.log(\"test2\");\n    return this.httpClient.get<Log[]>(this.url);\n  }\n\n  public editEntry(putData: Object, id:number) : Observable<any>{\n    if(id==0 ) { return new Observable(); } // if id is undefined\n    console.log(\"To be updated: \", putData);\n    return this.httpClient.put<JSON>(this.url + '/' + id, putData);\n  }\n  public getId(getData:Object, id:number) : Observable<any>{\n    if(id==0 ) { return new Observable(); } // if id is undefined\n    console.log(\"To be edited: \", getData);\n    return this.httpClient.get<JSON>(this.url + '/' + id);\n  }\n  \n\n  /**\n     * remove an existing log\n     * @param id contains the data of the log that should be removed\n     */\n   deleteLog(id: number): Observable<Log[]> {\n    return this.httpClient.delete<Log[]>(this.url + '/' + id);\n}\n\n}\n","import { stringify } from '@angular/compiler/src/util';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  \n  eyeball(event:MouseEvent){\n      console.log(event.pageX, event.pageY);\n      var eyes = document.querySelectorAll('.eye') as NodeListOf<HTMLElement>;\n      eyes.forEach(function (eye){\n          let x = (eye.getBoundingClientRect().left) + (eye.clientWidth / 2);\n          let y = (eye.getBoundingClientRect().top) + (eye.clientHeight / 2);\n          let radian = Math.atan2(event.pageX - x, event.pageY - y);\n          let rot = (radian * (180/Math.PI) * -1) + 270;\n          console.log(\"rotacija je\"+ rot);\n          eye.style.transform = \"rotate(\" + rot + \"deg)\";\n      })\n  }\n}\n\n","<div class=\"krug\"></div>\n<div class=\"wrapper\"  (mousemove)=\"eyeball($event)\">\n    <div class=\"left\">\n        <h1>About.</h1>\n        <p>Umjesto da se pravi sajt koji je direktno u vezi sa samom temom mog seminarskog rada, odnosno o samom Angularu,\n            odlučila sam da se Angular ipak koristi prilikom izrade frontenda. Sajt predstavlja lični blog.\n            Pošto je ITD predmet koncipiran tako da se većinu vremena radi samostalno, počela sam voditi logove svakog\n            dana dok sam radila na malom, a sada i velikom, projektu. Na taj način imam pregled svega što sam radila,\n            šta treba da uradim, kao i uložene sate. \n            <br>\n            Ovo sam radila zbog dvije stvari: dobra praksa za rad na budućim\n            ozbiljnijim projektima, kao i dokaz uloženog rada i truda. Činilo se kao dobra ideja, napraviti sajt upravo\n            centriran oko mojih dnevnih (b)logova, tačnije jedno mjesto na kojem će se nalaziti svi unosi. Sajt koji će\n            pričati priču o tome kako je napravljen, imenovan: \"My Angular Journey\".</p>\n            <br>\n            <a href=\"assets/file2.pdf\"><p>Pogledajte kako je projekat izgledao u ranim počecima</p></a>\n    </div>\n    <div class=\"right\">\n        <div class=\"eyes\">\n            <div class=\"eye\"></div>\n            <div class=\"eye\"></div>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-log-image',\n  templateUrl: './log-image.component.html',\n  styleUrls: ['./log-image.component.css']\n})\nexport class LogImageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"image\">\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu-bar',\n  templateUrl: './menu-bar.component.html',\n  styleUrls: ['./menu-bar.component.css']\n})\nexport class MenuBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"header\">\n    <a href=\"#\"><h2>Ana Zrnić.</h2></a>\t\n    <ul>\t\t\t\t\t\t\t\t\t\t\t\n        <li><a routerLink=\"/home\" routerLinkActive=\"active\">Home</a></li>\t\n        <li><a routerLink=\"/logs\" routerLinkActive=\"active\">Logs</a></li>\n        <li><a routerLink=\"/new-entry\" routerLinkActive=\"active\">New Entry</a></li>\n        <li><a routerLink=\"/about\" routerLinkActive=\"active\">About</a></li>\n        \n    </ul>\n</div>","<button (click)=\"onDeleteClick()\" class=\"delete\">Delete</button>\n<button (click)=\"onEditClick()\"  class=\"update\">Update</button>\n<div class=\"col-md-12\">\n    <!-- <app-log *ngFor = \"let log of logs\"\n    [currentLog] = \"log\"\n    [class.disabled] = \"log.id == this.selectedId\"\n    (click) = \"onSelected(log.id)\"\n    ></app-log> -->\n    <div *ngFor=\"let log of logs\" (click)=\"onSelected(log.id)\"  class=\"wrapper\" [style.background-color] = \"log.id == this.selectedId ? '#acac99' : '#f1f1e5'\">\n        <img src=\"assets/test2.jpg\">\n    \n    <!--<app-log-image></app-log-image>--> \n    <!-- <app-log-text [logtxt] = \"currentLog.naslov\"></app-log-text>--> \n        <div class=\"text\">\n            <h1>{{log.naslov}}</h1>\n            <p>{{log.opis}}</p>\n            <h4>Ukupno sati: {{log.vrijeme}}</h4>\n        </div>\n    </div>    \n</div>\n<!-- <div class=\"d-none\">Should not be shown</div>\n<div [class.d-none] = \"this.selectedId == 1\">I will disappear if id selected is 1 and id selected is {{this.selectedId}}</div> -->\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Log } from '../log';\nimport { LogService } from '../log.service';\n\n@Component({\n  selector: 'app-logs',\n  templateUrl: './logs.component.html',\n  styleUrls: ['./logs.component.css']\n})\nexport class LogsComponent implements OnInit {\n\n  logs: Log[] = [];\n  /* logs: Log[] = [\n    {\n      id : 1,\n      naslov : \"naslov1\",\n      vrijeme : \"v1\",\n      opis : \"opis1\"\n    },\n    {\n      id : 2,\n      naslov : \"naslov2\",\n      vrijeme : \"v2\",\n      opis : \"opis2\"\n    }\n  ]; */\n  error = false;\n  selectedId = 0;\n  errorMessage = '';\n\n  constructor(private _logsService: LogService, private router:Router) {  }\n\n  ngOnInit(): void {\n    this.loadLogs();\n    \n  }\n\n  onEditClick(){\n    if(this.selectedId == 0) { return ; }\n    this.router.navigate(['/edit-entry', this.selectedId]);\n    console.log(\"Clicked edit with id \" + this.selectedId);\n  }\n  \n\n  loadLogs(){\n    console.log(\"test1\");\n    this._logsService.getLogs().subscribe(\n      (data: Log[]) => {\n          console.log(data);\n          this.logs = data;\n      },\n      (error: any) => {\n          this.defaultServiceErrorHandling(error);\n      }\n    );\n  }\n\n  onDeleteClick(){\n    this._logsService.deleteLog(this.selectedId).subscribe(\n      (data: Log[]) => {\n          console.log(data);\n          console.log(\"Successfully deleted\");\n          // this.logs = this.logs.filter(log => {log.id != this.selectedId});\n          // this.selectedId = 0;\n          // console.log(data);\n          this.loadLogs();\n      },\n      (error: any) => {\n          this.defaultServiceErrorHandling(error);\n      }\n    );\n  }\n\n  onSelected(id: number | undefined){\n    if(id) this.selectedId = id;\n  }\n\n  /**\n     * Error flag will be activated, if an error occurs somewhere in the program\n     * @param error that will be set\n     */\n  private defaultServiceErrorHandling(error: any) {\n    console.log(error);\n    this.error = true;\n    if (error.status === 0) {\n        // If status is 0, the backend is probably down\n        this.errorMessage = 'The backend seems not to be reachable';\n    } else if (error.error.message === 'No message available') {\n        // If no detailed error message is provided, fall back to the simple error name\n        this.errorMessage = error.error.error;\n    } else {\n        this.errorMessage = error.error.message;\n    }\n  }\n\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Log } from 'src/app/log';\n\n@Component({\n  selector: 'app-log-text',\n  templateUrl: './log-text.component.html',\n  styleUrls: ['./log-text.component.css']\n})\nexport class LogTextComponent implements OnInit {\n\n  constructor() { }\n/* \n  @Input()\n  log: Log[]; */\n\n  /*\n    @Input()\n    log: Log[]; */\n\n  @Input()\n  logTxt!: String;\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"text\">\n    \n    <!--<h1>{{log.naslov}}</h1> -->\n    <p></p>\n    <h4>Ukupno sati: </h4>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-banner',\n  templateUrl: './home-banner.component.html',\n  styleUrls: ['./home-banner.component.css']\n})\nexport class HomeBannerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"krug\"></div>\n<div class=\"wrapper\">\n    <div class=\"home-banner-left\">\n        <app-left></app-left>  \n    </div>\n    <div class=\"home-banner-right\">\n        <app-right></app-right>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NewEntryService } from '../new-entry.service';\nimport { Log } from '../log';\nimport { FormBuilder } from '@angular/forms';\nimport { LogService } from '../log.service';\n\n\n@Component({\n  selector: 'app-edit-entry',\n  templateUrl: './edit-entry.component.html',\n  styleUrls: ['./edit-entry.component.css']\n})\nexport class EditEntryComponent implements OnInit {\n\n  value1!:string;\n  value2!:string;\n  value3!:string;\n    \n  entry: Log[] = [];\n  checkoutForm = this.formBuilder.group({\n    naslov: '',\n    opis: '',\n    vrijeme: ''\n  });\n\n  chosenId = 0;\n  defaultEntryModel : Log = { id : 0 , naslov : '', opis : '', vrijeme : ''};\n  entryModel : Log = { id : 0 , naslov : '', opis : '', vrijeme : ''};\n  \n  constructor(private route:ActivatedRoute, private router:Router, private _logService:LogService, private formBuilder:FormBuilder) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      params => {\n        this.chosenId = +params['id'];\n      }\n    );\n    let myObject = this.checkoutForm.value;\n    this.entryModel.id = this.chosenId;\n    this.entryModel.naslov = myObject.naslov;\n    this.entryModel.opis = myObject.opis;\n    this.entryModel.vrijeme = myObject.vrijeme;\n    console.log(\"To be edited as Log: \", this.entryModel);\n    this._logService.getId(this.entryModel, this.chosenId).subscribe(\n      (data: Log[]) => {\n        console.log(\"Success\",data);\n        this.entry = data;\n        this.value1 = this.entry[0].naslov;\n        this.value2 = this.entry[0].opis;\n        this.value3 = this.entry[0].vrijeme;\n      },\n      (error) => {console.error(\"Error\",error);}\n    );  \n    \n  }\n\n  onSubmit(){\n    // Process checkout data here\n    let myObject = this.checkoutForm.value;\n    console.warn('Your order has been submitted', myObject);\n    console.log(typeof myObject);\n\n    /* let myString = JSON.stringify(myObject);\n    console.warn(myString);\n    console.log(typeof myString); */\n    this.entryModel.id = this.chosenId;\n    this.entryModel.naslov = myObject.naslov;\n    this.entryModel.opis = myObject.opis;\n    this.entryModel.vrijeme = myObject.vrijeme;\n    console.log(\"To be submitted as Log: \", this.entryModel);\n    this._logService.editEntry(this.entryModel, this.chosenId).subscribe(\n      (data) => {console.log(\"Success\",data);},\n      (error) => {console.error(\"Error\",error);}\n    );  \n    \n    this.entryModel = this.defaultEntryModel;\n    this.checkoutForm.reset();\n    \n  }\n\n}\n","<div class=\"krug\"></div>\n<div class=\"avion2\"><img src=\"assets/plane2.png\" alt=\"\"></div>\n\n<form [formGroup]=\"checkoutForm\" name=\"contactForm\" method=\"POST\" action=\"/process\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"container\">\n        <h1>Naslov.</h1>\n        <input formControlName=\"naslov\" name=\"naslov\" class=\"prvi\" type=\"text\" placeholder=\"Datum unosa...\" [(ngModel)]=\"value1\">\n        <h1>Opis.</h1>\n        <textarea formControlName=\"opis\" name=\"opis\" class=\"drugi\" cols=\"10\" rows=\"10\" placeholder=\"Odrađene stavke...\" [(ngModel)]=\"value2\"></textarea>\n        <h1>Vrijeme.</h1>\n        <input formControlName=\"vrijeme\" name=\"vrijeme\" class=\"prvi\" type=\"text\" placeholder=\"Provedeno vrijeme...\" [(ngModel)]=\"value3\">\n        <br>\n        <input class=\"button\" type=\"submit\" value=\"Pošalji\">\n    </div>\n</form>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { Log } from '../app/log'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewEntryService {\n  url: string;\n  error = false;\n  errorMessage = '';\n\n  constructor(private httpClient: HttpClient) { \n    this.url = \"http://127.0.0.1:5000/static\";\n    //this.url = \"https://hookb.in/JKMMqXKz3ocJPPWVOjEB\";\n\n  }\n\n  public addPost(postData: Object) {\n    let endPoints = \"/process\";\n    this.httpClient.post(this.url + endPoints, postData).subscribe(\n      (data) => {\n      console.log(data);\n    },\n    (error) => {\n      this.defaultServiceErrorHandling(error);      \n    });\n  }\n\n  \n\n  private defaultServiceErrorHandling(error: any) {\n    console.log(error);\n    this.error = true;\n    if (error.status === 0) {\n        // If status is 0, the backend is probably down\n        this.errorMessage = 'The backend seems not to be reachable';\n    } else if (error.error.message === 'No message available') {\n        // If no detailed error message is provided, fall back to the simple error name\n        this.errorMessage = error?.error?.error;\n    } else {\n        this.errorMessage = error.error.message;\n    }\n}\n\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'My-Angular-Journey';\n}\n","<app-menu-bar></app-menu-bar>\n<router-outlet></router-outlet>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Log } from '../log';\n\n@Component({\n  selector: 'app-log',\n  templateUrl: './log.component.html',\n  styleUrls: ['./log.component.css']\n})\nexport class LogComponent implements OnInit {\n  \n  @Input()\n  currentLog!: Log;\n\n  @Input()\n  isSelected! : boolean;\n\n  style = \"wrapper\";\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onOptionsSelected(){\n    // this.style = \"wrapperClicked\";\n  }\n}\n\n","<div (selected)=\"isSelected\" [ngClass]=\"style\" (click)=\"onOptionsSelected()\" >\n    <!-- <div class=\"image\"></div> -->\n    <img src=\"assets/test.jpg\">\n    \n    <!--<app-log-image></app-log-image>--> \n    <!-- <app-log-text [logtxt] = \"currentLog.naslov\"></app-log-text>--> \n    <div class=\"text\">\n        <h1>{{currentLog.naslov}}</h1>\n        <p>{{currentLog.opis}}</p>\n        <h4>Ukupno sati: {{currentLog.vrijeme}}</h4>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MenuBarComponent } from './menu-bar/menu-bar.component';\nimport { HomeBannerComponent } from './home-banner/home-banner.component';\nimport { LeftComponent } from './home-banner/left/left.component';\nimport { RightComponent } from './home-banner/right/right.component';\nimport { LogComponent } from './log/log.component';\nimport { LogImageComponent } from './log/log-image/log-image.component';\nimport { LogTextComponent } from './log/log-text/log-text.component';\nimport { AboutComponent } from './about/about.component';\nimport { NewEntryComponent } from './new-entry/new-entry.component';\nimport { LogsComponent } from './logs/logs.component';\nimport { EditEntryComponent } from './edit-entry/edit-entry.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuBarComponent,\n    HomeBannerComponent,\n    LeftComponent,\n    RightComponent,\n    LogComponent,\n    LogImageComponent,\n    LogTextComponent,\n    AboutComponent,\n    NewEntryComponent,\n    LogsComponent,\n    EditEntryComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-right',\n  templateUrl: './right.component.html',\n  styleUrls: ['./right.component.css']\n})\nexport class RightComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div id=\"test\">\n    <img src=\"assets/monitor.png\" alt=\"\">\n</div>\n<div id=\"test2\">    \n    <a href=\"assets/file.pdf\"><img src=\"assets/check-me.png\" alt=\"\"></a>    \n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-left',\n  templateUrl: './left.component.html',\n  styleUrls: ['./left.component.css']\n})\nexport class LeftComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"title\">\n    <h1><span>my </span>\n        <span ><img src=\"assets/angular.png\"></span>\n        <span>ngular </span>\n        <span>journey.</span></h1>\n</div>\n\n<div class=\"introduction\">\n    <p>Dobro došli u moje angular putovanje, ovaj projekat služi tome da se vidi i isprati vremenska linija razvijanja istog. Ukoliko se prvi put susrećete sa ovom tehnologijom preporučeno je da pogledate moj rad na ovu temu klikom na dugme ispod ovog teksta.</p>\n</div>\n<div class=\"dugme\"><button>\n    <a href=\"assets/file.pdf\">Pogledaj rad</a>\n</button></div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport{ HomeBannerComponent } from './home-banner/home-banner.component'\nimport{ LogsComponent } from './logs/logs.component';\nimport{ NewEntryComponent } from './new-entry/new-entry.component';\nimport{ AboutComponent } from './about/about.component';\nimport { EditEntryComponent } from './edit-entry/edit-entry.component';\n\n\nconst routes: Routes = [\n  { path:'', component:HomeBannerComponent },\n  { path:'home', component:HomeBannerComponent },\n  { path:'about', component:AboutComponent },\n  { path:'logs', component:LogsComponent },\n  { path:'new-entry', component:NewEntryComponent },\n  { path: 'edit-entry/:id', component:EditEntryComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { NewEntryService } from '../new-entry.service';\n\n@Component({\n  selector: 'app-new-entry',\n  templateUrl: './new-entry.component.html',\n  styleUrls: ['./new-entry.component.css']\n})\nexport class NewEntryComponent implements OnInit {\n\n  checkoutForm = this.formBuilder.group({\n    naslov: '',\n    opis: '',\n    vrijeme: ''\n  });\n\n  constructor(\n    private newEntryService: NewEntryService,\n    private formBuilder: FormBuilder,\n  ) { }\n\n  onSubmit(){\n    // Process checkout data here\n    let myObject = this.checkoutForm.value;\n    console.warn('Your order has been submitted', myObject);\n    console.log(typeof myObject);\n\n    /* let myString = JSON.stringify(myObject);\n    console.warn(myString);\n    console.log(typeof myString); */\n\n    this.newEntryService.addPost(myObject);  \n    \n    this.checkoutForm.reset();\n    \n  }\n  \n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"krug\"></div>\n<div class=\"avion2\"><img src=\"assets/plane3.png\" alt=\"\"></div>\n\n<form [formGroup]=\"checkoutForm\" name=\"contactForm\" method=\"POST\" action=\"/process\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"container\">\n        <h1>Naslov.</h1>\n        <input formControlName=\"naslov\" name=\"naslov\" class=\"prvi\" type=\"text\" placeholder=\"Datum unosa...\" required autofocus>\n        <h1>Opis.</h1>\n        <textarea formControlName=\"opis\" name=\"opis\" class=\"drugi\" cols=\"10\" rows=\"10\" placeholder=\"Odrađene stavke...\"></textarea>\n        <h1>Vrijeme.</h1>\n        <input formControlName=\"vrijeme\" name=\"vrijeme\" class=\"prvi\" type=\"text\" placeholder=\"Provedeno vrijeme...\">\n        <br>\n        <input class=\"button\" type=\"submit\" value=\"Pošalji\">\n    </div>\n</form>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}